<launch>
    <arg name="tcp_ip"                            default="0.0.0.0"/>
    <arg name="tcp_port"                          default="10000"/>
    
    <arg name="robot_model"                       default="locobot_wx200"/>
    <arg name="robot_name"                        default="locobot"/>
    <arg name="external_urdf_loc"                 default=""/>
    <arg name="external_srdf_loc"                 default=""/>
    <arg name="mode_configs"                      default="$(find interbotix_xslocobot_moveit)/config/modes_all.yaml"/>
    <arg name="use_actual"                        default="true"/>
    <arg name="dof"                               default="5"/>
    <arg name="use_rviz"                          default="false"/>
    <arg name="use_base"                          default="true"/>
    <arg name="use_lidar"                         default="true"/>
    <arg name="show_lidar"                        default="true"/>
    <arg name="use_camera"                        default="true"/>
    <arg name="use_moveit_rviz"                   default="false"/>

    <arg name="connect_unity"                     default="true"/>


    <!-- ROS-TCP-Endpoint -->
    <include if="$(arg connect_unity)" file="$(find ros_tcp_endpoint)/launch/endpoint.launch">
        <arg name="tcp_ip"                 value="$(arg tcp_ip)"/>
        <arg name="tcp_port"               value="$(arg tcp_port)"/>
    </include>

    <!-- <rosparam if="$(arg connect_unity)" param="use_sim_time">true</rosparam> -->

  <rosparam file="$(find interbotix_xslocobot_ros_control)/config/$(arg dof)dof_controllers.yaml" command="load" ns="$(arg robot_name)"/>
  <rosparam file="$(find interbotix_xslocobot_ros_control)/config/hardware.yaml" command="load" ns="$(arg robot_name)"/>

  <include file="$(find interbotix_xslocobot_control)/launch/xslocobot_control.launch">
    <arg name="robot_model"                       value="$(arg robot_model)"/>
    <arg name="robot_name"                        value="$(arg robot_name)"/>
    <arg name="external_urdf_loc"                 value="$(arg external_urdf_loc)"/>
    <arg name="use_rviz"                          value="$(arg use_rviz)"/>
    <arg name="use_base"                          value="$(arg use_base)"/>
    <arg name="use_lidar"                         value="$(arg use_lidar)"/>
    <arg name="show_lidar"                        value="$(arg show_lidar)"/>
    <arg name="use_camera"                        value="$(arg use_camera)"/>
  </include>

  <node
    name="controller_spawner"
    pkg="controller_manager"
    type="controller_manager"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="spawn arm_controller gripper_controller"/>

  <node
    name="xs_hardware_interface"
    pkg="interbotix_xs_ros_control"
    type="xs_hardware_interface"
    output="screen"
    ns="$(arg robot_name)">
  </node>

  <include file="$(find interbotix_xslocobot_moveit)/launch/move_group.launch" ns="$(arg robot_name)">
    <arg name="robot_model"                       value="$(arg robot_model)"/>
    <arg name="robot_name"                        value="$(arg robot_name)"/>
    <arg name="show_lidar"                        value="$(arg show_lidar)"/>
    <arg name="external_srdf_loc"                 value="$(arg external_srdf_loc)"/>
    <arg name="dof"                               value="$(arg dof)"/>
    <arg name="use_camera"                        value="$(arg use_camera)"/>
    <arg name="publish_monitored_planning_scene"  value="true" />
  </include>

  <include if="$(arg use_moveit_rviz)" file="$(find interbotix_xslocobot_moveit)/launch/moveit_rviz.launch" ns="$(arg robot_name)">
    <arg name="robot_name"                        value="$(arg robot_name)"/>
    <arg name="config"                            value="true"/>
  </include>



    <node name="arm_unity" pkg="telecobot_ros_unity" type="armController.py" 
        respawn="false" args="--wait" output="screen" ns="$(arg robot_name)">
        <rosparam command="load"                      file="$(find interbotix_xslocobot_moveit_interface)/config/$(arg robot_model).yaml"/>
        <param name="robot_model"                     value="$(arg robot_model)"/>
        <remap from="/attached_collision_object"      to="/$(arg robot_name)/attached_collision_object"/>
        <remap from="/collision_object"               to="/$(arg robot_name)/collision_object"/>
    </node>
</launch>
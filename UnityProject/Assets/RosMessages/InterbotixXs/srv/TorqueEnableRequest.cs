//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.InterbotixXs
{
    [Serializable]
    public class TorqueEnableRequest : Message
    {
        public const string k_RosMessageName = "interbotix_xs_msgs/TorqueEnable";
        public override string RosMessageName => k_RosMessageName;

        //  Torque joints on/off
        public string cmd_type;
        //  set to 'group' if commanding a joint group or 'single' if commanding a single joint
        public string name;
        //  name of the group if commanding a joint group or joint if commanding a single joint
        public bool enable;
        //  set to 'true' to torque on or 'false' to torque off

        public TorqueEnableRequest()
        {
            this.cmd_type = "";
            this.name = "";
            this.enable = false;
        }

        public TorqueEnableRequest(string cmd_type, string name, bool enable)
        {
            this.cmd_type = cmd_type;
            this.name = name;
            this.enable = enable;
        }

        public static TorqueEnableRequest Deserialize(MessageDeserializer deserializer) => new TorqueEnableRequest(deserializer);

        private TorqueEnableRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.cmd_type);
            deserializer.Read(out this.name);
            deserializer.Read(out this.enable);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.cmd_type);
            serializer.Write(this.name);
            serializer.Write(this.enable);
        }

        public override string ToString()
        {
            return "TorqueEnableRequest: " +
            "\ncmd_type: " + cmd_type.ToString() +
            "\nname: " + name.ToString() +
            "\nenable: " + enable.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.InterbotixXs
{
    [Serializable]
    public class RobotInfoResponse : Message
    {
        public const string k_RosMessageName = "interbotix_xs_msgs/RobotInfo";
        public override string RosMessageName => k_RosMessageName;

        public string mode;
        //  the operating mode for the specified joint group or joint
        public string profile_type;
        //  the profile type for the specified joint group or joint
        public string[] joint_names;
        //  the name of each joint in a group or just the specified joint
        public short[] joint_ids;
        //  the Dynamixel ID for each joint in a group or for the specified joint
        public float[] joint_lower_limits;
        //  the lower limit [radians] for each joint in a group or for the specified joint (taken from URDF)
        public float[] joint_upper_limits;
        //  the upper limit [radians] for each joint in a group or for the specified joint (taken from URDF)
        public float[] joint_velocity_limits;
        //  the velocity limit [rad/s] for each joint in a group or for the specified joint (taken from URDF)
        public float[] joint_sleep_positions;
        //  the sleep position [rad] for each joint in a group or for the specified joint
        public short[] joint_state_indices;
        //  index for each joint in a group or for the specified joint in the published JointState message
        public short num_joints;
        //  the number of joints in a group or 1
        public string[] name;
        //  the name of the group or joint requested; if group was 'all', returns the names of all groups

        public RobotInfoResponse()
        {
            this.mode = "";
            this.profile_type = "";
            this.joint_names = new string[0];
            this.joint_ids = new short[0];
            this.joint_lower_limits = new float[0];
            this.joint_upper_limits = new float[0];
            this.joint_velocity_limits = new float[0];
            this.joint_sleep_positions = new float[0];
            this.joint_state_indices = new short[0];
            this.num_joints = 0;
            this.name = new string[0];
        }

        public RobotInfoResponse(string mode, string profile_type, string[] joint_names, short[] joint_ids, float[] joint_lower_limits, float[] joint_upper_limits, float[] joint_velocity_limits, float[] joint_sleep_positions, short[] joint_state_indices, short num_joints, string[] name)
        {
            this.mode = mode;
            this.profile_type = profile_type;
            this.joint_names = joint_names;
            this.joint_ids = joint_ids;
            this.joint_lower_limits = joint_lower_limits;
            this.joint_upper_limits = joint_upper_limits;
            this.joint_velocity_limits = joint_velocity_limits;
            this.joint_sleep_positions = joint_sleep_positions;
            this.joint_state_indices = joint_state_indices;
            this.num_joints = num_joints;
            this.name = name;
        }

        public static RobotInfoResponse Deserialize(MessageDeserializer deserializer) => new RobotInfoResponse(deserializer);

        private RobotInfoResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.mode);
            deserializer.Read(out this.profile_type);
            deserializer.Read(out this.joint_names, deserializer.ReadLength());
            deserializer.Read(out this.joint_ids, sizeof(short), deserializer.ReadLength());
            deserializer.Read(out this.joint_lower_limits, sizeof(float), deserializer.ReadLength());
            deserializer.Read(out this.joint_upper_limits, sizeof(float), deserializer.ReadLength());
            deserializer.Read(out this.joint_velocity_limits, sizeof(float), deserializer.ReadLength());
            deserializer.Read(out this.joint_sleep_positions, sizeof(float), deserializer.ReadLength());
            deserializer.Read(out this.joint_state_indices, sizeof(short), deserializer.ReadLength());
            deserializer.Read(out this.num_joints);
            deserializer.Read(out this.name, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.mode);
            serializer.Write(this.profile_type);
            serializer.WriteLength(this.joint_names);
            serializer.Write(this.joint_names);
            serializer.WriteLength(this.joint_ids);
            serializer.Write(this.joint_ids);
            serializer.WriteLength(this.joint_lower_limits);
            serializer.Write(this.joint_lower_limits);
            serializer.WriteLength(this.joint_upper_limits);
            serializer.Write(this.joint_upper_limits);
            serializer.WriteLength(this.joint_velocity_limits);
            serializer.Write(this.joint_velocity_limits);
            serializer.WriteLength(this.joint_sleep_positions);
            serializer.Write(this.joint_sleep_positions);
            serializer.WriteLength(this.joint_state_indices);
            serializer.Write(this.joint_state_indices);
            serializer.Write(this.num_joints);
            serializer.WriteLength(this.name);
            serializer.Write(this.name);
        }

        public override string ToString()
        {
            return "RobotInfoResponse: " +
            "\nmode: " + mode.ToString() +
            "\nprofile_type: " + profile_type.ToString() +
            "\njoint_names: " + System.String.Join(", ", joint_names.ToList()) +
            "\njoint_ids: " + System.String.Join(", ", joint_ids.ToList()) +
            "\njoint_lower_limits: " + System.String.Join(", ", joint_lower_limits.ToList()) +
            "\njoint_upper_limits: " + System.String.Join(", ", joint_upper_limits.ToList()) +
            "\njoint_velocity_limits: " + System.String.Join(", ", joint_velocity_limits.ToList()) +
            "\njoint_sleep_positions: " + System.String.Join(", ", joint_sleep_positions.ToList()) +
            "\njoint_state_indices: " + System.String.Join(", ", joint_state_indices.ToList()) +
            "\nnum_joints: " + num_joints.ToString() +
            "\nname: " + System.String.Join(", ", name.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}

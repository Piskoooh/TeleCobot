//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.InterbotixXs
{
    [Serializable]
    public class TurretJoyMsg : Message
    {
        public const string k_RosMessageName = "interbotix_xs_msgs/TurretJoy";
        public override string RosMessageName => k_RosMessageName;

        //  This message is used specifically in the interbotix_xsturret_simple_interface package
        // 
        //  Maps raw 'joy' commands to more specific ones to control an Interbotix turret
        //  enum values that define the joystick controls for the robot
        // ########################################################################################################
        //  Control the pan-and-tilt mechanism
        public const sbyte PAN_CCW = 1;
        public const sbyte PAN_CW = 2;
        public const sbyte TILT_UP = 3;
        public const sbyte TILT_DOWN = 4;
        public const sbyte PAN_TILT_HOME = 5;
        // ########################################################################################################
        //  Customize configurations for the Interbotix Turret
        //  Inc/Dec Joint speed
        public const sbyte SPEED_INC = 6;
        public const sbyte SPEED_DEC = 7;
        //  Quickly toggle between a fast and slow speed setting
        public const sbyte SPEED_COURSE = 8;
        public const sbyte SPEED_FINE = 9;
        // ########################################################################################################
        //  Control the motion of the pan-and-tilt mechanism
        public sbyte pan_cmd;
        public sbyte tilt_cmd;
        //  Speed Configs
        public sbyte speed_cmd;
        public sbyte speed_toggle_cmd;

        public TurretJoyMsg()
        {
            this.pan_cmd = 0;
            this.tilt_cmd = 0;
            this.speed_cmd = 0;
            this.speed_toggle_cmd = 0;
        }

        public TurretJoyMsg(sbyte pan_cmd, sbyte tilt_cmd, sbyte speed_cmd, sbyte speed_toggle_cmd)
        {
            this.pan_cmd = pan_cmd;
            this.tilt_cmd = tilt_cmd;
            this.speed_cmd = speed_cmd;
            this.speed_toggle_cmd = speed_toggle_cmd;
        }

        public static TurretJoyMsg Deserialize(MessageDeserializer deserializer) => new TurretJoyMsg(deserializer);

        private TurretJoyMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.pan_cmd);
            deserializer.Read(out this.tilt_cmd);
            deserializer.Read(out this.speed_cmd);
            deserializer.Read(out this.speed_toggle_cmd);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.pan_cmd);
            serializer.Write(this.tilt_cmd);
            serializer.Write(this.speed_cmd);
            serializer.Write(this.speed_toggle_cmd);
        }

        public override string ToString()
        {
            return "TurretJoyMsg: " +
            "\npan_cmd: " + pan_cmd.ToString() +
            "\ntilt_cmd: " + tilt_cmd.ToString() +
            "\nspeed_cmd: " + speed_cmd.ToString() +
            "\nspeed_toggle_cmd: " + speed_toggle_cmd.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

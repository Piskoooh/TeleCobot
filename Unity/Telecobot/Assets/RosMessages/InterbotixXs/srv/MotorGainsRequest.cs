//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.InterbotixXs
{
    [Serializable]
    public class MotorGainsRequest : Message
    {
        public const string k_RosMessageName = "interbotix_xs_msgs/MotorGains";
        public override string RosMessageName => k_RosMessageName;

        //  Set PID gains
        // 
        //  To get familiar with the various PID gains, go to...
        //  http://emanual.robotis.com/docs/en/software/dynamixel/dynamixel_workbench/
        //  ...click on a motor model, and scroll down to the 'PID' section.
        public string cmd_type;
        //  set to 'group' if commanding a joint group or 'single' if commanding a single joint
        public string name;
        //  name of the group if commanding a joint group or joint if commanding a single joint
        public int kp_pos;
        //  acts as a pass-through to the Position_P_Gain register
        public int ki_pos;
        //  acts as a pass-through to the Position_I_Gain register
        public int kd_pos;
        //  acts as a pass-through to the Position_D_Gain register
        public int k1;
        //  acts as a pass-through to the Feedforward_1st_Gain register
        public int k2;
        //  acts as a pass-through to the Feedforward_2nd_Gain register
        public int kp_vel;
        //  acts as a pass-through to the Velocity_P_Gain register
        public int ki_vel;
        //  acts as a pass-through to the Velocity_I_Gain register

        public MotorGainsRequest()
        {
            this.cmd_type = "";
            this.name = "";
            this.kp_pos = 0;
            this.ki_pos = 0;
            this.kd_pos = 0;
            this.k1 = 0;
            this.k2 = 0;
            this.kp_vel = 0;
            this.ki_vel = 0;
        }

        public MotorGainsRequest(string cmd_type, string name, int kp_pos, int ki_pos, int kd_pos, int k1, int k2, int kp_vel, int ki_vel)
        {
            this.cmd_type = cmd_type;
            this.name = name;
            this.kp_pos = kp_pos;
            this.ki_pos = ki_pos;
            this.kd_pos = kd_pos;
            this.k1 = k1;
            this.k2 = k2;
            this.kp_vel = kp_vel;
            this.ki_vel = ki_vel;
        }

        public static MotorGainsRequest Deserialize(MessageDeserializer deserializer) => new MotorGainsRequest(deserializer);

        private MotorGainsRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.cmd_type);
            deserializer.Read(out this.name);
            deserializer.Read(out this.kp_pos);
            deserializer.Read(out this.ki_pos);
            deserializer.Read(out this.kd_pos);
            deserializer.Read(out this.k1);
            deserializer.Read(out this.k2);
            deserializer.Read(out this.kp_vel);
            deserializer.Read(out this.ki_vel);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.cmd_type);
            serializer.Write(this.name);
            serializer.Write(this.kp_pos);
            serializer.Write(this.ki_pos);
            serializer.Write(this.kd_pos);
            serializer.Write(this.k1);
            serializer.Write(this.k2);
            serializer.Write(this.kp_vel);
            serializer.Write(this.ki_vel);
        }

        public override string ToString()
        {
            return "MotorGainsRequest: " +
            "\ncmd_type: " + cmd_type.ToString() +
            "\nname: " + name.ToString() +
            "\nkp_pos: " + kp_pos.ToString() +
            "\nki_pos: " + ki_pos.ToString() +
            "\nkd_pos: " + kd_pos.ToString() +
            "\nk1: " + k1.ToString() +
            "\nk2: " + k2.ToString() +
            "\nkp_vel: " + kp_vel.ToString() +
            "\nki_vel: " + ki_vel.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from locobot.urdf.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="locobot">
  <material name="interbotix_black">
    <texture filename="package://interbotix_xslocobot_descriptions/meshes/interbotix_black.png"/>
  </material>
  <link name="/base_footprint"/>
  <!-- kobuki -->
  <!-- Much of the following iRobot Create3 description is taken from https://github.com/iRobotEducation/create3_sim/tree/6b8a4a6ce0d0902a7de117c29cbe55bfc52a4e54/irobot_create_common/irobot_create_description/urdf -->
  <!-- The original 3-Clause BSD License is retained below -->
  <!--
    Copyright 2021 iRobot Corporation.

    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
    IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->
  <!-- It has been modified to include the robot_name as a prefix to the links -->
  <!-- It currently does not allow for simulation in either Gazebo (formerly Ignition) or Gazebo Class -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/base_footprint"/>
    <child link="/base_link"/>
  </joint>
  <!-- Create 3 base definition-->
  <link name="/base_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0.039200000000000006"/>
      <geometry>
        <mesh filename="package://irobot_create_description/meshes/body_visual.dae"/>
      </geometry>
    </visual>
    <collision name="create3_base_collision">
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0.04920000000000001"/>
      <geometry>
        <cylinder length="0.06" radius="0.16399999999999998"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.0 0 0.0742"/>
      <mass value="2.3"/>
      <inertia ixx="0.016155199999999998" ixy="0.0" ixz="0.0" iyy="0.016155199999999998" iyz="0.0" izz="0.03093039999999999"/>
    </inertial>
  </link>
  <joint name="bump_caster" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="3.141592653589793 0 1.5707963267948966" xyz="-0.1098 0 0.009648"/>
    <parent link="/base_link"/>
    <child link="/bump_caster_link"/>
  </joint>
  <link name="/bump_caster_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/bump_caster.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/bump_caster.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.003407"/>
      <mass value="0.0055"/>
      <inertia ixx="3.69E-07" ixy="0" ixz="0" iyy="2.96E-07" iyz="0" izz="6.12E-07"/>
    </inertial>
  </link>
  <gazebo reference="bump_caster_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <joint name="bump_front_center_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/bump_front_center"/>
    <origin xyz="0 0 0.039200000000000006"/>
  </joint>
  <link name="/bump_front_center">
    <visual>
      <geometry>
        <mesh filename="package://irobot_create_description/meshes/bumper_visual.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://irobot_create_description/meshes/bumper_collision.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.08 0 0.02"/>
      <mass value="0.1"/>
      <inertia ixx="0.0013483753405" ixy="0.0000000454352" ixz="0.0000014434849" iyy="0.0002521736852" iyz="-0.0000000006721" izz="0.0015442525386"/>
    </inertial>
  </link>
  <gazebo reference="/bump_front_center">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <maxVel>0.01</maxVel>
    <minDepth>0.001</minDepth>
    <maxContacts>10</maxContacts>
    <material>Gazebo/DarkGrey</material>
    <sensor name="bump_front_center_contact_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>62.0</update_rate>
      <contact>
        <collision>bump_front_center_collision</collision>
      </contact>
      <!-- Disabled for ROS 1 -->
      <!-- <xacro:if value="${gazebo == 'classic'}">
        <plugin name="${name}_plugin" filename="libgazebo_ros_create_bumper.so">
          <ros>
            <namespace>/</namespace>
            <remapping>~/out:=_internal/bumper/event</remapping>
          </ros>
        </plugin>
      </xacro:if> -->
    </sensor>
  </gazebo>
  <gazebo reference="bump_front_center_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <joint name="bump_front_left_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/bump_front_left"/>
    <origin rpy="0 0 0.5235985" xyz="0.02345 -0.0875 0.025"/>
  </joint>
  <link name="/bump_front_left"/>
  <joint name="bump_front_right_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/bump_front_right"/>
    <origin rpy="0 0 -0.5235985" xyz="0.02345 0.0875 0.025"/>
  </joint>
  <link name="/bump_front_right"/>
  <joint name="bump_left_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/bump_left"/>
    <origin rpy="0 0 1.047193" xyz="0.0875 -0.15155 0.025"/>
  </joint>
  <link name="/bump_left"/>
  <joint name="bump_right_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/bump_right"/>
    <origin rpy="0 0 -1.047193" xyz="0.0875 0.15155 0.025"/>
  </joint>
  <link name="/bump_right"/>
  <joint name="wheel_drop_left_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/wheel_drop_left"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0 0.1165 0.04020000000000001"/>
    <axis xyz="0 1 0"/>
    <limit effort="0" lower="0" upper="0.03" velocity="0"/>
    <!-- Damping is big enough to not make the body oscillate too much when it's lifted up -->
    <dynamics damping="50" friction="0.1"/>
  </joint>
  <!-- Gazebo parameters to simulate a spring -->
  <gazebo reference="wheel_drop_left_joint">
    <provideFeedback>false</provideFeedback>
    <implicitSpringDamper>true</implicitSpringDamper>
    <!-- This value should be high enough so that the wheeldrop can
          retract with the robot's weight (mass * gravity) -->
    <springStiffness>400</springStiffness>
    <springReference>0.03</springReference>
  </gazebo>
  <link name="/wheel_drop_left">
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="2.0833333333333336e-05" ixy="0.0" ixz="0.0" iyy="2.0833333333333336e-05" iyz="0.0" izz="2.0833333333333336e-05"/>
    </inertial>
  </link>
  <!-- Disabled for ROS 1 -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
    <gazebo>
      <plugin name="${wd_link_name}_plugin" filename="libgazebo_ros_create_wheel_drop.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/wheel_drop/${name}_wheel/event</remapping>
        </ros>
        <update_rate>${update_rate}</update_rate>
        <detection_threshold>${detection_threshold}</detection_threshold>
        <joint_name>${wd_joint_name}</joint_name>
        <frame_id>${wd_link_name}</frame_id>
      </plugin>
    </gazebo>
  </xacro:if> -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="/wheel_drop_left"/>
    <child link="/left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="/left_wheel">
    <visual>
      <geometry>
        <cylinder length="0.015" radius="0.035750000000000004"/>
      </geometry>
      <!-- Give black color to wheels in Rviz -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.015" radius="0.035750000000000004"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="6.765312500000001e-05" ixy="0.0" ixz="0.0" iyy="6.765312500000001e-05" iyz="0.0" izz="0.00012780625000000003"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.0001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- <transmission name="trans_${wheel_joint_name}">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${wheel_joint_name}">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="${wheel_joint_name}_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission> -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
    <ros2_control name="${wheel_link_name}_controller" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="${wheel_joint_name}">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if> -->
  <!-- <xacro:if value="${gazebo == 'ignition'}">
    <ros2_control name="${wheel_link_name}_controller" type="system">
      <hardware>
        <plugin>ign_ros2_control/IgnitionSystem</plugin>
      </hardware>
      <joint name="${wheel_joint_name}">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if> -->
  <joint name="wheel_drop_right_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/wheel_drop_right"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0 -0.1165 0.04020000000000001"/>
    <axis xyz="0 1 0"/>
    <limit effort="0" lower="0" upper="0.03" velocity="0"/>
    <!-- Damping is big enough to not make the body oscillate too much when it's lifted up -->
    <dynamics damping="50" friction="0.1"/>
  </joint>
  <!-- Gazebo parameters to simulate a spring -->
  <gazebo reference="wheel_drop_right_joint">
    <provideFeedback>false</provideFeedback>
    <implicitSpringDamper>true</implicitSpringDamper>
    <!-- This value should be high enough so that the wheeldrop can
          retract with the robot's weight (mass * gravity) -->
    <springStiffness>400</springStiffness>
    <springReference>0.03</springReference>
  </gazebo>
  <link name="/wheel_drop_right">
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="2.0833333333333336e-05" ixy="0.0" ixz="0.0" iyy="2.0833333333333336e-05" iyz="0.0" izz="2.0833333333333336e-05"/>
    </inertial>
  </link>
  <!-- Disabled for ROS 1 -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
    <gazebo>
      <plugin name="${wd_link_name}_plugin" filename="libgazebo_ros_create_wheel_drop.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/wheel_drop/${name}_wheel/event</remapping>
        </ros>
        <update_rate>${update_rate}</update_rate>
        <detection_threshold>${detection_threshold}</detection_threshold>
        <joint_name>${wd_joint_name}</joint_name>
        <frame_id>${wd_link_name}</frame_id>
      </plugin>
    </gazebo>
  </xacro:if> -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="/wheel_drop_right"/>
    <child link="/right_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="/right_wheel">
    <visual>
      <geometry>
        <cylinder length="0.015" radius="0.035750000000000004"/>
      </geometry>
      <!-- Give black color to wheels in Rviz -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.015" radius="0.035750000000000004"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="6.765312500000001e-05" ixy="0.0" ixz="0.0" iyy="6.765312500000001e-05" iyz="0.0" izz="0.00012780625000000003"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.0001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- <transmission name="trans_${wheel_joint_name}">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="${wheel_joint_name}">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="${wheel_joint_name}_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission> -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
    <ros2_control name="${wheel_link_name}_controller" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="${wheel_joint_name}">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if> -->
  <!-- <xacro:if value="${gazebo == 'ignition'}">
    <ros2_control name="${wheel_link_name}_controller" type="system">
      <hardware>
        <plugin>ign_ros2_control/IgnitionSystem</plugin>
      </hardware>
      <joint name="${wheel_joint_name}">
        <state_interface name="velocity" />
        <state_interface name="position" />
        <command_interface name="velocity" />
      </joint>
    </ros2_control>
  </xacro:if> -->
  <joint name="front_caster_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/front_caster_link"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0.125 0 0.012200000000000003"/>
  </joint>
  <link name="/front_caster_link">
    <visual>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
      <!-- Give black color to caster in Rviz -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.01"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="4.0000000000000003e-07" ixy="0.0" ixz="0.0" iyy="4.0000000000000003e-07" iyz="0.0" izz="4.0000000000000003e-07"/>
    </inertial>
  </link>
  <gazebo reference="front_caster_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="front_caster_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <joint name="imu_joint" type="fixed">
    <origin xyz="0.050613 0.043673 0.0844"/>
    <parent link="/base_link"/>
    <child link="/imu_link"/>
  </joint>
  <link name="/imu_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/imu_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>62</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <!-- <xacro:if value="${gazebo == 'classic'}">
        <plugin name="${name}_plugin" filename="libgazebo_ros_create_imu.so">
          <ros>
            <namespace>/</namespace>
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </xacro:if> -->
    </sensor>
  </gazebo>
  <gazebo reference="/imu_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <joint name="/mouse_joint" type="fixed">
    <origin rpy="0 0 -0.7853981633974483" xyz="0.1015 0.087 0.009200000000000007"/>
    <parent link="/base_link"/>
    <child link="/mouse"/>
  </joint>
  <link name="/mouse">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <!-- Disabled for ROS 1 -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
      <gazebo>
        <plugin name="$(arg robot_name)/${name}_plugin" filename="libgazebo_ros_create_optical_mouse.so">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=${name}</remapping>
            </ros>
          <update_rate>${update_rate}</update_rate>
          <link_name>${name}</link_name>
        </plugin>
      </gazebo>
    </xacro:if> -->
  <gazebo reference="/mouse_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <joint name="cliff_side_left_joint" type="fixed">
    <origin rpy="0 1.3962634015954636 2.921681167838508" xyz="0.06 0.145 0.01920000000000001"/>
    <parent link="/base_link"/>
    <child link="/cliff_side_left"/>
  </joint>
  <link name="/cliff_side_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="cliff_side_left">
    <!-- Classic -->
    <!-- <xacro:if value="${gazebo == 'classic'}"> -->
    <sensor name="cliff_side_left" type="ray">
      <update_rate>62</update_rate>
      <visualize>False</visualize>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1.0</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.04363323129985824</min_angle>
            <max_angle>0.04363323129985824</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0001</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
      <!-- Noise is currently disabled -->
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.0</stddev>
      </noise>
      <plugin filename="libgazebo_ros_create_cliff_sensor.so" name="cliff_side_left">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/cliff_side_left/event</remapping>
        </ros>
        <detection_threshold>0.08</detection_threshold>
        <frame_id>cliff_side_left</frame_id>
      </plugin>
    </sensor>
    <!-- </xacro:if> -->
    <!-- Ignition -->
    <!-- <xacro:if value="${gazebo == 'ignition'}">
      <sensor name="${sensor_name}" type="gpu_lidar">
        <update_rate>${update_rate}</update_rate>
        <visualize>${visualize}</visualize>
        <always_on>true</always_on>
        <lidar>
          <scan>
            <horizontal>
              <samples>${h_samples}</samples>
              <resolution>${h_res}</resolution>
              <min_angle>${h_min_angle}</min_angle>
              <max_angle>${h_max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${v_samples}</samples>
              <resolution>${v_res}</resolution>
              <min_angle>${v_min_angle}</min_angle>
              <max_angle>${v_max_angle}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${r_min}</min>
            <max>${r_max}</max>
            <resolution>${r_res}</resolution>
          </range>
        </lidar>
      </sensor>
    </xacro:if> -->
  </gazebo>
  <joint name="cliff_side_right_joint" type="fixed">
    <origin rpy="0 1.3962634015954636 -2.921681167838508" xyz="0.06 -0.145 0.01920000000000001"/>
    <parent link="/base_link"/>
    <child link="/cliff_side_right"/>
  </joint>
  <link name="/cliff_side_right">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="cliff_side_right">
    <!-- Classic -->
    <!-- <xacro:if value="${gazebo == 'classic'}"> -->
    <sensor name="cliff_side_right" type="ray">
      <update_rate>62</update_rate>
      <visualize>False</visualize>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1.0</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.04363323129985824</min_angle>
            <max_angle>0.04363323129985824</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0001</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
      <!-- Noise is currently disabled -->
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.0</stddev>
      </noise>
      <plugin filename="libgazebo_ros_create_cliff_sensor.so" name="cliff_side_right">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/cliff_side_right/event</remapping>
        </ros>
        <detection_threshold>0.08</detection_threshold>
        <frame_id>cliff_side_right</frame_id>
      </plugin>
    </sensor>
    <!-- </xacro:if> -->
    <!-- Ignition -->
    <!-- <xacro:if value="${gazebo == 'ignition'}">
      <sensor name="${sensor_name}" type="gpu_lidar">
        <update_rate>${update_rate}</update_rate>
        <visualize>${visualize}</visualize>
        <always_on>true</always_on>
        <lidar>
          <scan>
            <horizontal>
              <samples>${h_samples}</samples>
              <resolution>${h_res}</resolution>
              <min_angle>${h_min_angle}</min_angle>
              <max_angle>${h_max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${v_samples}</samples>
              <resolution>${v_res}</resolution>
              <min_angle>${v_min_angle}</min_angle>
              <max_angle>${v_max_angle}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${r_min}</min>
            <max>${r_max}</max>
            <resolution>${r_res}</resolution>
          </range>
        </lidar>
      </sensor>
    </xacro:if> -->
  </gazebo>
  <joint name="cliff_front_left_joint" type="fixed">
    <origin rpy="0 1.3962634015954636 1.1397000015522971" xyz="0.16 0.045 0.01920000000000001"/>
    <parent link="/base_link"/>
    <child link="/cliff_front_left"/>
  </joint>
  <link name="/cliff_front_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="cliff_front_left">
    <!-- Classic -->
    <!-- <xacro:if value="${gazebo == 'classic'}"> -->
    <sensor name="cliff_front_left" type="ray">
      <update_rate>62</update_rate>
      <visualize>False</visualize>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1.0</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.04363323129985824</min_angle>
            <max_angle>0.04363323129985824</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0001</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
      <!-- Noise is currently disabled -->
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.0</stddev>
      </noise>
      <plugin filename="libgazebo_ros_create_cliff_sensor.so" name="cliff_front_left">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/cliff_front_left/event</remapping>
        </ros>
        <detection_threshold>0.08</detection_threshold>
        <frame_id>cliff_front_left</frame_id>
      </plugin>
    </sensor>
    <!-- </xacro:if> -->
    <!-- Ignition -->
    <!-- <xacro:if value="${gazebo == 'ignition'}">
      <sensor name="${sensor_name}" type="gpu_lidar">
        <update_rate>${update_rate}</update_rate>
        <visualize>${visualize}</visualize>
        <always_on>true</always_on>
        <lidar>
          <scan>
            <horizontal>
              <samples>${h_samples}</samples>
              <resolution>${h_res}</resolution>
              <min_angle>${h_min_angle}</min_angle>
              <max_angle>${h_max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${v_samples}</samples>
              <resolution>${v_res}</resolution>
              <min_angle>${v_min_angle}</min_angle>
              <max_angle>${v_max_angle}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${r_min}</min>
            <max>${r_max}</max>
            <resolution>${r_res}</resolution>
          </range>
        </lidar>
      </sensor>
    </xacro:if> -->
  </gazebo>
  <joint name="cliff_front_right_joint" type="fixed">
    <origin rpy="0 1.3962634015954636 -1.1397000015522971" xyz="0.16 -0.045 0.01920000000000001"/>
    <parent link="/base_link"/>
    <child link="/cliff_front_right"/>
  </joint>
  <link name="/cliff_front_right">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="cliff_front_right">
    <!-- Classic -->
    <!-- <xacro:if value="${gazebo == 'classic'}"> -->
    <sensor name="cliff_front_right" type="ray">
      <update_rate>62</update_rate>
      <visualize>False</visualize>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1.0</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.04363323129985824</min_angle>
            <max_angle>0.04363323129985824</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0001</min>
          <max>0.15</max>
          <resolution>1.0</resolution>
        </range>
      </ray>
      <!-- Noise is currently disabled -->
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.0</stddev>
      </noise>
      <plugin filename="libgazebo_ros_create_cliff_sensor.so" name="cliff_front_right">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=_internal/cliff_front_right/event</remapping>
        </ros>
        <detection_threshold>0.08</detection_threshold>
        <frame_id>cliff_front_right</frame_id>
      </plugin>
    </sensor>
    <!-- </xacro:if> -->
    <!-- Ignition -->
    <!-- <xacro:if value="${gazebo == 'ignition'}">
      <sensor name="${sensor_name}" type="gpu_lidar">
        <update_rate>${update_rate}</update_rate>
        <visualize>${visualize}</visualize>
        <always_on>true</always_on>
        <lidar>
          <scan>
            <horizontal>
              <samples>${h_samples}</samples>
              <resolution>${h_res}</resolution>
              <min_angle>${h_min_angle}</min_angle>
              <max_angle>${h_max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${v_samples}</samples>
              <resolution>${v_res}</resolution>
              <min_angle>${v_min_angle}</min_angle>
              <max_angle>${v_max_angle}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${r_min}</min>
            <max>${r_max}</max>
            <resolution>${r_res}</resolution>
          </range>
        </lidar>
      </sensor>
    </xacro:if> -->
  </gazebo>
  <joint name="ir_intensity_front_center_left_joint" type="fixed">
    <origin xyz="0.1540 0 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_front_center_left"/>
  </joint>
  <link name="/ir_intensity_front_center_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_front_center_left_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_front_center_left">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_front_center_right_joint" type="fixed">
    <origin rpy="0 0 -0.436" xyz="0.1396 -0.0651 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_front_center_right"/>
  </joint>
  <link name="/ir_intensity_front_center_right">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_front_center_right_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_front_center_right">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_front_left_joint" type="fixed">
    <origin rpy="0 0 0.436" xyz="0.1396 0.0651 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_front_left"/>
  </joint>
  <link name="/ir_intensity_front_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_front_left_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_front_left">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_front_right_joint" type="fixed">
    <origin rpy="0 0 -0.873" xyz="0.0990 -0.1180 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_front_right"/>
  </joint>
  <link name="/ir_intensity_front_right">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_front_right_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_front_right">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_left_joint" type="fixed">
    <origin rpy="0 0 0.873" xyz="0.0990 0.1180 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_left"/>
  </joint>
  <link name="/ir_intensity_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_left_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_left">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_right_joint" type="fixed">
    <origin rpy="0 0 -1.309" xyz="0.0399 -0.1488 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_right"/>
  </joint>
  <link name="/ir_intensity_right">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_right_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_right">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="ir_intensity_side_left_joint" type="fixed">
    <origin rpy="0 0 1.309" xyz="0.0399 0.1488 0.05720000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_intensity_side_left"/>
  </joint>
  <link name="/ir_intensity_side_left">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <gazebo reference="/ir_intensity_side_left_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="/ir_intensity_side_left">
    <!-- Disabled for ROS 1 -->
    <!-- <xacro:ray_sensor sensor_name="${link_name}"
                      update_rate="${update_rate}" visualize="${visualize}"
                      h_samples="5" h_res="1.0" h_min_angle="-${fov/2}" h_max_angle="${fov/2}"
                      v_samples="5" v_res="1.0" v_min_angle="-${fov/2}" v_max_angle="${fov/2}"
                      r_min="${min_range}" r_max="${max_range}" r_res="1.0">
          <plugin filename="libgazebo_ros_create_ir_intensity_sensor.so" name="${link_name}">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=_internal/${link_name}</remapping>
            </ros>
          </plugin>
      </xacro:ray_sensor> -->
  </gazebo>
  <joint name="button_1_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/button_1"/>
    <origin rpy="0 -1.5707963267948966 0" xyz="0.06 0.037 0.1442"/>
  </joint>
  <link name="/button_1"/>
  <joint name="button_2_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/button_2"/>
    <origin rpy="0 -1.5707963267948966 0" xyz="0.06 -0.037 0.1442"/>
  </joint>
  <link name="/button_2"/>
  <joint name="button_power_joint" type="fixed">
    <parent link="/base_link"/>
    <child link="/button_power"/>
    <origin rpy="0 -1.5707963267948966 0" xyz="0.06 0 0.1442"/>
  </joint>
  <link name="/button_power"/>
  <joint name="/ir_omni_joint" type="fixed">
    <origin xyz="0.153 0 0.09920000000000001"/>
    <parent link="/base_link"/>
    <child link="/ir_omni"/>
  </joint>
  <link name="/ir_omni">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.6666666666666668e-07" ixy="0.0" ixz="0.0" iyy="1.6666666666666668e-07" iyz="0.0" izz="1.6666666666666668e-07"/>
    </inertial>
  </link>
  <!-- Disabled for ROS 1 -->
  <!-- <xacro:if value="${gazebo == 'classic'}">
      <gazebo>
        <plugin name="${name}_plugin" filename="libgazebo_ros_create_ir_opcode.so">
          <ros>
            <namespace>/</namespace>
            <remapping>~/out:=ir_opcode</remapping>
          </ros>
          <update_rate>${update_rate}</update_rate>
          <robot_model_name>${robot_model_name}</robot_model_name>
          <receiver_link_name>${receiver_link_name}</receiver_link_name>
          <dock_model_name>${dock_model_name}</dock_model_name>
          <emitter_link_name>${emitter_link_name}</emitter_link_name>
          <sensor_0_fov>${sensor_0_fov}</sensor_0_fov>
          <sensor_0_range>${sensor_0_range}</sensor_0_range>
          <sensor_1_fov>${sensor_1_fov}</sensor_1_fov>
          <sensor_1_range>${sensor_1_range}</sensor_1_range>
        </plugin>
      </gazebo>
    </xacro:if> -->
  <gazebo reference="ir_omni_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <!-- Plugins -->
  <gazebo>
    <!-- Gazebo ROS Control -->
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
    <!-- Differential Drive -->
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <legacyMode>false</legacyMode>
      <updateRate>62</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.233</wheelSeparation>
      <wheelDiameter>0.0715</wheelDiameter>
      <wheelTorque>1.0</wheelTorque>
      <wheelAcceleration>0.9</wheelAcceleration>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>/odom</odometryFrame>
      <robotBaseFrame>/base_footprint</robotBaseFrame>
      <publishWheelJointState>true</publishWheelJointState>
      <rosDebugLevel>na</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <odometrySource>world</odometrySource>
      <publishTf>1</publishTf>
    </plugin>
    <!-- Ground truth pose -->
    <plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d_robot">
      <alwaysOn>true</alwaysOn>
      <update_rate>62</update_rate>
      <bodyName>/base_link</bodyName>
      <topicName>mobile_base/sim_ground_truth_pose</topicName>
      <namespace>/</namespace>
      <frameName>map</frameName>
      <xyz_offset>0 0 0</xyz_offset>
      <rpy_offset>0.0 0.0 0.0</rpy_offset>
      <gaussian_noise>0.0</gaussian_noise>
    </plugin>
    <!-- Dock status -->
    <!-- Disabled for ROS 1 -->
    <!-- <plugin name="dock_status_publisher" filename="libgazebo_ros_create_docking_status.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=dock</remapping>
      </ros>
      <update_rate>1.0</update_rate>
      <robot_model_name>${robot_model_name}</robot_model_name>
      <receiver_link_name>${receiver_link_name}</receiver_link_name>
      <dock_model_name>${dock_model_name}</dock_model_name>
      <emitter_link_name>${emitter_link_name}</emitter_link_name>
    </plugin> -->
  </gazebo>
  <!-- create3 -->
  <!-- ********************************** Plate **********************************  -->
  <!-- base_type == 'kobuki' -->
  <joint name="plate" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0934"/>
    <parent link="/base_link"/>
    <child link="/plate_link"/>
  </joint>
  <link name="/plate_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_base_plate.stl" scale="1 1 1"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_base_plate.stl" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.005869 0 4.67E-03"/>
      <mass value="0.807674"/>
      <inertia ixx="5.27E-03" ixy="0" ixz="0" iyy="3.27E-03" iyz="0" izz="8.54E-03"/>
    </inertial>
  </link>
  <gazebo reference="/plate_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <!-- base_type == 'create3' -->
  <!-- ********************************** Arm ********************************** -->
  <!-- base_type == 'kobuki' -->
  <joint name="arm_stand_link_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0.092002 0 0.007763"/>
    <parent link="/plate_link"/>
    <child link="/arm_stand_link"/>
  </joint>
  <link name="/arm_stand_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_arm_stand.stl" scale="1 1 1"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_arm_stand.stl" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-6.03E-04 0 1.93E-02"/>
      <mass value="0.134"/>
      <inertia ixx="2.87E-04" ixy="-2.90E-11" ixz="1.80E-07" iyy="1.25E-04" iyz="6.27E-10" izz="4.04E-04"/>
    </inertial>
  </link>
  <joint name="arm_base_link_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0 0 0.023"/>
    <parent link="/arm_stand_link"/>
    <child link="/arm_base_link"/>
  </joint>
  <!-- base_type == 'create3' -->
  <link name="/arm_base_link">
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="-0.095773 0 -0.10565023"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_1_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="-0.095773 0 -0.10565023"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_1_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="-0.0001350000 -0.0000266286 0.0338755000"/>
      <mass value="0.379673"/>
      <inertia ixx="0.0004351000" ixy="0.0000000707" ixz="0.0000000266" iyy="0.0004452000" iyz="-0.0000022881" izz="0.0005731000"/>
    </inertial>
  </link>
  <joint name="waist" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="8" lower="-3.141582653589793" upper="3.141582653589793" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0 0 0.066175"/>
    <parent link="/arm_base_link"/>
    <child link="/shoulder_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_waist">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="waist">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="waist_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/shoulder_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 -0.003"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_2_shoulder.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 -0.003"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_2_shoulder.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0000223210 0.0000414608 0.0066287000"/>
      <mass value="0.480879"/>
      <inertia ixx="0.0003790000" ixy="0.0000000022" ixz="-0.0000003561" iyy="0.0005557000" iyz="0.0000012247" izz="0.0005889000"/>
    </inertial>
  </link>
  <joint name="shoulder" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="18" lower="-1.8849555921538759" upper="1.9722220547535925" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0 0 0.03865"/>
    <parent link="/shoulder_link"/>
    <child link="/upper_arm_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_shoulder">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="shoulder">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="shoulder_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/upper_arm_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_3_upper_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_3_upper_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0119707000 -0.0001179264 0.1394290000"/>
      <mass value="0.297781"/>
      <inertia ixx="0.0017100000" ixy="-0.0000011433" ixz="0.0000021161" iyy="0.0016310000" iyz="0.0002135000" izz="0.0001482000"/>
    </inertial>
  </link>
  <joint name="elbow" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="13" lower="-1.8849555921538759" upper="1.6231562043547265" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.05 0 0.2"/>
    <parent link="/upper_arm_link"/>
    <child link="/forearm_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_elbow">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="elbow">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/forearm_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_4_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_4_forearm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.1211920000 -0.0001238123 0.0000000000"/>
      <mass value="0.283651"/>
      <inertia ixx="0.0011850000" ixy="-0.0000024317" ixz="0.0000000000" iyy="0.0000682900" iyz="0.0000000000" izz="0.0012060000"/>
    </inertial>
  </link>
  <joint name="wrist_angle" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="5" lower="-1.7453292519943295" upper="2.1467549799530254" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="/forearm_link"/>
    <child link="/wrist_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_wrist_angle">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wrist_angle">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wrist_angle_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/wrist_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_5_wrist.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_5_wrist.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0423600000 -0.0000106630 0.0105770000"/>
      <mass value="0.084957"/>
      <inertia ixx="0.0000308200" ixy="0.0000000191" ixz="0.0000000023" iyy="0.0000282200" iyz="0.0000025481" izz="0.0000315200"/>
    </inertial>
  </link>
  <joint name="wrist_rotate" type="revolute">
    <axis xyz="1 0 0"/>
    <limit effort="1" lower="-3.141582653589793" upper="3.141582653589793" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.065 0 0"/>
    <parent link="/wrist_link"/>
    <child link="/gripper_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_wrist_rotate">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wrist_rotate">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wrist_rotate_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/gripper_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.02 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_6_gripper.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.02 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_6_gripper.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0216310000 0.0000002516 0.0114100000"/>
      <mass value="0.072885"/>
      <inertia ixx="0.0000253700" ixy="0.0000000000" ixz="0.0000000000" iyy="0.0000183600" iyz="0.0000004340" izz="0.0000167400"/>
    </inertial>
  </link>
  <joint name="ee_arm" type="fixed">
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.043 0 0"/>
    <parent link="/gripper_link"/>
    <child link="/ee_arm_link"/>
  </joint>
  <link name="/ee_arm_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="gripper" type="continuous">
    <axis xyz="1 0 0"/>
    <limit effort="1" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.0055 0 0"/>
    <parent link="/ee_arm_link"/>
    <child link="/gripper_prop_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_gripper">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="gripper">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="gripper_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/gripper_prop_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.0685 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_7_gripper_prop.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.0685 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_7_gripper_prop.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0008460000 -0.0000016817 0.0000420000"/>
      <mass value="0.00434"/>
      <inertia ixx="0.0000005923" ixy="0.0000000000" ixz="0.0000003195" iyy="0.0000011156" iyz="-0.0000000004" izz="0.0000005743"/>
    </inertial>
  </link>
  <joint name="ar_tag" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="-0.017 0 0.04155"/>
    <parent link="/ee_arm_link"/>
    <child link="/ar_tag_link"/>
  </joint>
  <link name="/ar_tag_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_10_ar_tag.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_10_ar_tag.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 -0.00315"/>
      <mass value="0.016507"/>
      <inertia ixx="0.000003084" ixy="0" ixz="0" iyy="0.000003084" iyz="0" izz="0.000006059"/>
    </inertial>
  </link>
  <!-- If the gripper bar is being used, then also add the gripper bar -->
  <joint name="gripper_bar" type="fixed">
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/ee_arm_link"/>
    <child link="/gripper_bar_link"/>
  </joint>
  <link name="/gripper_bar_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.063 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_8_gripper_bar.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="-0.063 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_8_gripper_bar.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0096870000 0.0000008177 0.0049620000"/>
      <mass value="0.034199"/>
      <inertia ixx="0.0000074125" ixy="-0.0000000008" ixz="-0.0000000006" iyy="0.0000284300" iyz="-0.0000013889" izz="0.0000286000"/>
    </inertial>
  </link>
  <joint name="ee_bar" type="fixed">
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.023 0 0"/>
    <parent link="/gripper_bar_link"/>
    <child link="/fingers_link"/>
  </joint>
  <link name="/fingers_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- If the gripper fingers are being used, add those as well -->
  <joint name="left_finger" type="prismatic">
    <axis xyz="0 1 0"/>
    <limit effort="5" lower="0.015" upper="0.037" velocity="1"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/fingers_link"/>
    <child link="/left_finger_link"/>
    <dynamics friction="0.1"/>
  </joint>
  <transmission name="trans_left_finger">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_finger">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_finger_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/left_finger_link">
    <visual>
      <origin rpy="3.141592653589793 3.141592653589793 0" xyz="0 0.005 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_9_gripper_finger.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 3.141592653589793 0" xyz="0 0.005 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_9_gripper_finger.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="3.141592653589793 3.141592653589793 1.5707963267948966" xyz="0.0138160000 0.0000000000 0.0000000000"/>
      <mass value="0.016246"/>
      <inertia ixx="0.0000047310" ixy="-0.0000004560" ixz="0.0000000000" iyy="0.0000015506" iyz="0.0000000000" izz="0.0000037467"/>
    </inertial>
  </link>
  <joint name="right_finger" type="prismatic">
    <axis xyz="0 1 0"/>
    <limit effort="5" lower="-0.037" upper="-0.015" velocity="1"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="/fingers_link"/>
    <child link="/right_finger_link"/>
    <dynamics friction="0.1"/>
    <mimic joint="left_finger" multiplier="-1" offset="0"/>
  </joint>
  <transmission name="trans_right_finger">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_finger">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_finger_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/right_finger_link">
    <visual>
      <origin rpy="0 3.141592653589793 0" xyz="0 -0.005 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_9_gripper_finger.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 3.141592653589793 0" xyz="0 -0.005 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/mobile_wx200_meshes/mobile_wx200_9_gripper_finger.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 3.141592653589793 1.5707963267948966" xyz="0.0138160000 0.0000000000  0.0000000000"/>
      <mass value="0.016246"/>
      <inertia ixx="0.0000047310" ixy="0.0000004560" ixz="0.0000000000" iyy="0.0000015506" iyz="0.0000000000" izz="0.0000037467"/>
    </inertial>
  </link>
  <joint name="ee_gripper" type="fixed">
    <axis xyz="1 0 0"/>
    <origin rpy="0 0 0" xyz="0.027575 0 0"/>
    <parent link="/fingers_link"/>
    <child link="/ee_gripper_link"/>
  </joint>
  <link name="/ee_gripper_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <gazebo reference="/arm_base_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>
  <gazebo reference="/shoulder_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/upper_arm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/upper_forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/lower_forearm_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/wrist_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="/gripper_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>
  <gazebo reference="/ar_tag_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <gazebo reference="/gripper_prop_link">
    <dampingFactor>0.01</dampingFactor>
    <material>Custom/Interbotix</material>
  </gazebo>
  <gazebo reference="/gripper_bar_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <gazebo reference="/left_finger_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>
  <gazebo reference="/right_finger_link">
    <material>Custom/Interbotix</material>
    <dampingFactor>0.01</dampingFactor>
  </gazebo>
  <gazebo reference="/arm_cradle_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <gazebo reference="arm_base_link_joint">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="plate">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="ar_tag">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="ee_arm">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="gripper_bar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="ee_bar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <gazebo reference="ee_gripper">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <!-- base_type == 'kobuki' -->
  <joint name="arm_cradle" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0.037943 0 0.139"/>
    <parent link="/camera_tower_link"/>
    <child link="/arm_cradle_link"/>
  </joint>
  <link name="/arm_cradle_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_arm_cradle.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_arm_cradle.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0014389900 0 0.0098387400"/>
      <mass value="0.017626"/>
      <inertia ixx="0.0000046575" ixy="0" ixz="0.0000000748" iyy="0.0000018629" iyz="0" izz="0.0000046198"/>
    </inertial>
  </link>
  <gazebo reference="arm_cradle">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <!-- base_type == 'create3' -->
  <!-- arm_type == 'mobile_wx200' -->
  <!-- arm_type != 'mobile_base' -->
  <!-- ********************************** Battery **********************************  -->
  <!-- base_type == 'kobuki' -->
  <joint name="battery" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0345 0 0.010763"/>
    <parent link="/plate_link"/>
    <child link="/battery_link"/>
  </joint>
  <gazebo reference="battery">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <link name="/battery_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_battery.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_battery.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.016"/>
      <mass value="1.194"/>
      <inertia ixx="0.004312" ixy="0" ixz="0" iyy="0.001908" iyz="0" izz="0.006017"/>
    </inertial>
  </link>
  <gazebo reference="/battery_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- base_type == 'create3' -->
  <!-- ********************************** Camera Tower **********************************  -->
  <!-- base_type == 'kobuki' -->
  <!-- base_type == 'create3' && camera_tower_size == 'large' -->
  <joint name="camera_tower" type="fixed">
    <origin rpy="0 0 0" xyz="-0.048271 0 0.10087"/>
    <parent link="/base_link"/>
    <child link="/camera_tower_link"/>
  </joint>
  <gazebo reference="camera_tower">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <link name="/camera_tower_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_camera_tower_small.stl" scale="1 1 1"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/create3_version/locobot_camera_tower_small_simple.stl" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.024689 -0.003432 0.185408"/>
      <mass value="2.430647"/>
      <inertia ixx="5.63E-02" ixy="1.37E-04" ixz="5.75E-03" iyy="4.78E-02" iyz="-7.70E-04" izz="1.86E-02"/>
    </inertial>
  </link>
  <gazebo reference="/camera_tower_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <!-- base_type == 'create3' && camera_tower_size == 'small' -->
  <!-- base_type == 'create3' -->
  <!-- ********************************** Pan & Tilt **********************************  -->
  <!-- base_type == 'kobuki' -->
  <!-- base_type == 'create3' && camera_tower_size == 'large' -->
  <joint name="pan" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="2" lower="-1.5707963267948966" upper="1.5707963267948966" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.061228 0 0.402"/>
    <parent link="/camera_tower_link"/>
    <child link="/pan_link"/>
  </joint>
  <transmission name="trans_pan">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="pan">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="pan_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/pan_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_pan.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_pan.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.012 0.000496 0.018504"/>
      <mass value="0.098997"/>
      <inertia ixx="0.0000276300" ixy="0.0000000418" ixz="0.0000005145" iyy="0.0000204300" iyz="-0.0000000421" izz="0.0000276300"/>
    </inertial>
  </link>
  <gazebo reference="/pan_link">
    <material>Custom/Interbotix</material>
    <self_collide>true</self_collide>
  </gazebo>
  <joint name="tilt" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="2" lower="-1.5707963267948966" upper="1.3089969389957472" velocity="3.141592653589793"/>
    <origin rpy="0 0 0" xyz="0.025034 0 0.019"/>
    <parent link="/pan_link"/>
    <child link="/tilt_link"/>
  </joint>
  <transmission name="trans_tilt">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="tilt">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="tilt_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="/tilt_link">
    <visual>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_tilt.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_tilt.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 1.5707963267948966" xyz="0.0237737000 -0.0000016331 0.0000077432"/>
      <mass value="0.019845"/>
      <inertia ixx="0.0000021677" ixy="0.0000000000" ixz="0.0000000001" iyy="0.0000063634" iyz="0.0000000003" izz="0.0000066157"/>
    </inertial>
  </link>
  <gazebo reference="/tilt_link">
    <material>Custom/Interbotix</material>
    <self_collide>true</self_collide>
  </gazebo>
  <joint name="camera" type="fixed">
    <origin rpy="0 0 0" xyz="0.05318 0.0175 0.000009"/>
    <parent link="/tilt_link"/>
    <child link="/camera_link"/>
  </joint>
  <gazebo reference="camera">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <link name="/camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_camera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="">
        <color rgba="0.55 0.55 0.55 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_camera.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.008972 -0.015818 0.000003"/>
      <mass value="0.072"/>
      <inertia ixx="0.0000465400" ixy="0.0000003028" ixz="0.0000000245" iyy="0.0000069128" iyz="0.0000000248" izz="0.0000468600"/>
    </inertial>
  </link>
  <gazebo reference="/camera_link">
    <material>Gazebo/Grey</material>
    <self_collide>true</self_collide>
  </gazebo>
  <!-- Adds a dummy link, libgazebo_ros_openni_kinect publishes from frame's z-axis -->
  <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/issues/243 -->
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="/camera_link"/>
    <child link="/camera_depth_link"/>
  </joint>
  <link name="/camera_depth_link">
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </link>
  <gazebo reference="/camera_link">
    <sensor name="camera_frame_sensor" type="depth">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>0.994837</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>10</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_frame_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>aligned_depth_to_color/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>aligned_depth_to_color/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
        <frameName>/camera_depth_link</frameName>
        <pointCloudCutoff>0.01</pointCloudCutoff>
        <pointCloudCutoffMax>10</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- base_type == 'create3' && camera_tower_size == 'small' -->
  <!-- base_type == 'create3' -->
  <!-- ********************************** Lidar **********************************  -->
  <!-- base_type == 'kobuki' -->
  <!-- base_type == 'create3' && camera_tower_size == 'large' -->
  <joint name="lidar_tower" type="fixed">
    <origin rpy="0 0 0" xyz="-0.066095 0 0.402"/>
    <parent link="/camera_tower_link"/>
    <child link="/lidar_tower_link"/>
  </joint>
  <link name="/lidar_tower_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_lidar_tower.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_lidar_tower_simple.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.0074822400 -0.0000196881 0.0507957000"/>
      <mass value="0.155485"/>
      <inertia ixx="0.0007642000" ixy="-0.0000001357" ixz="0.0000134700" iyy="0.0001285000" iyz="0.0000000354" izz="0.0007840000"/>
    </inertial>
  </link>
  <gazebo reference="/lidar_tower_link">
    <material>Custom/Interbotix</material>
  </gazebo>
  <gazebo reference="lidar_tower">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <joint name="lidar" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0.09425"/>
    <parent link="/lidar_tower_link"/>
    <child link="/laser_frame_link"/>
  </joint>
  <gazebo reference="lidar">
    <disableFixedJointLumping>true</disableFixedJointLumping>
  </gazebo>
  <link name="/laser_frame_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://interbotix_xslocobot_descriptions/meshes/locobot_meshes/locobot_lidar.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0091"/>
      <geometry>
        <cylinder length="0.0408" radius="0.03785"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0007379970 0 -0.0103809000"/>
      <mass value="0.196"/>
      <inertia ixx="0.0000907500" ixy="0.0000000001" ixz="-0.0000014234" iyy="0.0000877600" iyz="0" izz="0.0001268000"/>
    </inertial>
  </link>
  <gazebo reference="/laser_frame_link">
    <material>Custom/Interbotix</material>
    <sensor name="rplidar" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>400</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>16.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_rplidar_controller">
        <topicName>scan</topicName>
        <frameName>/laser_frame_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- base_type == 'create3' && camera_tower_size == 'small' -->
  <!-- base_type == 'create3' -->
  <!-- show_lidar -->
</robot>

